{"all_procs": {"procedure_1.csv": [["Item", "Trial Type", "Max Time", "Text", "Shuffle 1", ""], ["2", "poker", "user", "This is the start of a new experiment.", "off", ""], ["", "", "", "", "", ""]]}, "cond_array": [["Name", "Notes", "Stimuli", "Procedure", "fullscreen", "welcome", "participant_id", "end_message", "start_message", "buffer", ""], ["condition_1", "You can put more detailed notes in this field", "stimuli_1.csv", "procedure_1.csv", "off", "", "random", "", "", "5", ""], ["", "", "", "", "", "", "", "", "", "", ""]], "all_stims": {"stimuli_1.csv": [["Cue", "Answer", ""], ["A", "Apple", ""], ["B", "Banana", ""], ["", "", ""]]}, "procedure": null, "stimuli": null, "public_key": "/Egattu3LE/aSnwFHlRrEt0w51Y90CUhG4QR27jO/xA=", "save_script": "\"https://script.google.com/macros/s/AKfycbyMQS4T2DpGkq6Ue4IDaRVHKKuQXoOnCm0116m92hmQTfn-Syk/exec\"", "parsed_procs": {"procedure_1.csv": [{"": "", "item": "2", "trial type": "poker", "max time": "user", "text": "This is the start of a new experiment.", "shuffle 1": "off"}]}, "surveys": {}, "trialtypes": {"instruct": "<!--\r\n/*  Collector (Garcia, Kornell, Kerr, Blake & Haffey)\r\n    A program for running experiments on the web\r\n    Copyright 2012-2016 Mikey Garcia & Nate Kornell\r\n\r\n\r\n    This program is free software: you can redistribute it and/or modify\r\n    it under the terms of the GNU General Public License version 3 as published by\r\n    the Free Software Foundation.\r\n\r\n    This program is distributed in the hope that it will be useful,\r\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n    GNU General Public License for more details.\r\n\r\n    You should have received a copy of the GNU General Public License\r\n    along with this program.  If not, see <http://www.gnu.org/licenses/>\r\n \t\t\r\n\t\tKitten release (2019) author: Dr. Anthony Haffey (a.haffey@reading.ac.uk)\t\t\r\n*/\r\n-->\r\n<style>\r\n#instruct_text{\r\n  margin:auto;\r\n  width:500px;\r\n  padding:50px;\r\n  max-height:600px;\r\n  text-align: center;  \r\n}\r\n#proceed_button{\r\n  position:absolute;\r\n  right: 20px;\r\n}\r\n#trial_contents{\r\n  position: absolute;\r\n  top:0;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  margin:auto;\r\n  width:600;\r\n  height:600;\r\n}\r\n</style>\r\n<div id=\"trial_contents\">\r\n  <div id=\"instruct_text\">{{text}}</div>\r\n  <div>\r\n    <button class=\"btn btn-primary\" id=\"proceed_button\" onclick=\"Trial.submit()\">Proceed</button>\r\n  </div>\r\n</div>", "poker": "<script\n  src=\"https://code.jquery.com/jquery-3.4.1.min.js\"\n  integrity=\"sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=\"\n  crossorigin=\"anonymous\"></script>\n<style>\n#game{\n  position:relative;\n  margin:auto;\n  width:800px;\n  padding:50px;\n  height:800px;\n  text-align: center;  \n  display:none;  \n}\n#lobby{\n  margin:auto;\n  width:500px;\n  padding:50px;\n  max-height:600px;\n  text-align: center;  \n  display:none;  \n}\n#new_room_btn{\n  width:100%;\n}\n#table{\n  border-radius:350px;\n  background-color:green;\n  width:700px;\n  height:600px;\n}\n#welcome_screen{\n  margin:auto;\n  width:500px;\n  padding:50px;\n  max-height:600px;\n  text-align: center;  \n}\n#player_0{\n  top:300px;\n  left:0px;\n}\n#player_1{\n  left:50px;\n  top:100px;\n}\n#player_2{\n  top:30px;\n  left:250px;\n}\n#player_3{\n  top:30px;\n  left:450px;\n}\n#player_4{\n  top:100px;\n  left:600px;\n}\n#player_5{\n  top:300px;\n  left:700px;\n}\n#player_6{\n  top:500px;\n  left:600px;\n}\n#player_7{\n  top:600px;\n  left:450px;\n}\n#player_8{\n  top:600px;\n  left:250px;\n}\n#player_9{\n  top:500px;\n  left:50px;\n}\n#player_1_card_1{\n  position:absolute;\n  left:-200px;\n  top:300px;\n}\n#player_1_card_2{\n  position:absolute;\n  left:-100px;\n  top:300px;\n}\n#player_2_card_1{\n  position:absolute;\n  left:-150px;\n  top:100px;\n}\n#player_2_card_2{\n  position:absolute;\n  left:-50px;\n  top:100px;\n}\n#player_3_card_1{\n  position:absolute;\n  left:150px;\n  top:-50px;\n}\n#player_3_card_2{\n  position:absolute;\n  left:50px;\n  top:-50px;\n}\n#player_4_card_1{\n  position:absolute;\n  left:550px;\n  top:-50px;\n}\n#player_4_card_2{\n  position:absolute;\n  left:650px;\n  top:-50px;\n}\n#player_5_card_1{\n  position:absolute;\n  left:750px;\n  top:100px;\n}\n#player_5_card_2{\n  position:absolute;\n  left:850px;\n  top:100px;\n}\n#player_6_card_1{\n  position:absolute;\n  left:800px;\n  top:320px;\n}\n#player_6_card_2{\n  position:absolute;\n  left:900px;\n  top:320px;\n}\n#player_7_card_1{\n  position:absolute;\n  left:750px;\n  top:520px;\n}\n#player_7_card_2{\n  position:absolute;\n  left:850px;\n  top:520px;\n}\n#player_8_card_1{\n  position:absolute;\n  left:550px;\n  top:730px;\n}\n#player_8_card_2{\n  position:absolute;\n  left:650px;\n  top:730px;\n}\n#player_9_card_1{\n  position:absolute;\n  left:50px;\n  top:730px;\n}\n#player_9_card_2{\n  position:absolute;\n  left:150px;\n  top:730px;\n}\n#player_10_card_1{\n  position:absolute;\n  left:-150px;\n  top:520px;\n}\n#player_10_card_2{\n  position:absolute;\n  left:-50px;\n  top:520px;\n}\n\n#your_cards{\n  position:absolute;\n  top:400px;\n  left:300px;\n}\n#your_bet{\n  position:absolute;\n  top:520px;\n  left:275px;\n}\n#middle_cards{\n  position:absolute;\n  top:250px;\n  left:150px;\n}\n.card{\n  width:100px;\n  height:100px;\n}\n.player_space{\n  position:absolute;\n  background-color: white;\n  border-style: solid;\n  border-radius: 10px;\n  padding: 10px;\n  \n}\n</style>\n<h1>Room Code:<span id=\"room_code_span\"></span></h1>\n<div id=\"welcome_screen\">\n  <h1 class=\"text-primary\">Texas Hold-em</h1>\n  <button class=\"btn btn-primary\" id=\"new_room_btn\">New room</button>\n  <br><br>\n  <div class=\"input-group mb-3\">\n    <div class=\"input-group-prepend\">\n      <span class=\"input-group-text\">Room code</span>\n    </div>\n    <input type=\"text\" class=\"form-control\" aria-label=\"room code\" id=\"room_code_input\">\n    <div class=\"input-group-append\">\n      <button class=\"input-group-text btn-primary\" id=\"join_btn\">Join</button>\n    </div>\n  </div>\n</div>\n<div id=\"lobby\">\n  <h1>Lobby</h1>\n  <div id=\"lobby_people\"></div>\n  <button class=\"btn btn-primary\" id=\"everybody_in_btn\">Everybody's in</button>\n</div>\n<div id=\"game\">\n  <div id=\"table\"></div>\n  <div id=\"player_0\" class=\"text-primary player_space\">player 0</div>\n  <div id=\"player_1\" class=\"text-primary player_space\">player 1</div>\n  <div id=\"player_2\" class=\"text-primary player_space\">player 2</div>\n  <div id=\"player_3\" class=\"text-primary player_space\">player 3</div>\n  <div id=\"player_4\" class=\"text-primary player_space\">player 4</div>\n  <div id=\"player_5\" class=\"text-primary player_space\">player 5</div>\n  <div id=\"player_6\" class=\"text-primary player_space\">player 6</div>\n  <div id=\"player_7\" class=\"text-primary player_space\">player 7</div>\n  <div id=\"player_8\" class=\"text-primary player_space\">player 8</div>\n  <div id=\"player_9\" class=\"text-primary player_space\">player 9</div>\n  <img id=\"player_1_card_1\" class=\"player_card card\" src=\"../User/Stimuli/Cards/back-red.png\"/>\n  <img id=\"player_1_card_2\" class=\"player_card card\" src=\"../User/Stimuli/Cards/back-red.png\"/>\n  <img id=\"player_2_card_1\" class=\"player_card card\" src=\"../User/Stimuli/Cards/back-red.png\"/>\n  <img id=\"player_2_card_2\" class=\"player_card card\" src=\"../User/Stimuli/Cards/back-red.png\"/>\n  <img id=\"player_3_card_1\" class=\"player_card card\" src=\"../User/Stimuli/Cards/back-red.png\"/>\n  <img id=\"player_3_card_2\" class=\"player_card card\" src=\"../User/Stimuli/Cards/back-red.png\"/>\n  <img id=\"player_4_card_1\" class=\"player_card card\" src=\"../User/Stimuli/Cards/back-red.png\"/>\n  <img id=\"player_4_card_2\" class=\"player_card card\" src=\"../User/Stimuli/Cards/back-red.png\"/>\n  <img id=\"player_5_card_1\" class=\"player_card card\" src=\"../User/Stimuli/Cards/back-red.png\"/>\n  <img id=\"player_5_card_2\" class=\"player_card card\" src=\"../User/Stimuli/Cards/back-red.png\"/>\n  <img id=\"player_6_card_1\" class=\"player_card card\" src=\"../User/Stimuli/Cards/back-red.png\"/>\n  <img id=\"player_6_card_2\" class=\"player_card card\" src=\"../User/Stimuli/Cards/back-red.png\"/>\n  <img id=\"player_7_card_1\" class=\"player_card card\" src=\"../User/Stimuli/Cards/back-red.png\"/>\n  <img id=\"player_7_card_2\" class=\"player_card card\" src=\"../User/Stimuli/Cards/back-red.png\"/>\n  <img id=\"player_8_card_1\" class=\"player_card card\" src=\"../User/Stimuli/Cards/back-red.png\"/>\n  <img id=\"player_8_card_2\" class=\"player_card card\" src=\"../User/Stimuli/Cards/back-red.png\"/>\n  <img id=\"player_9_card_1\" class=\"player_card card\" src=\"../User/Stimuli/Cards/back-red.png\"/>\n  <img id=\"player_9_card_2\" class=\"player_card card\" src=\"../User/Stimuli/Cards/back-red.png\"/>\n  <img id=\"player_10_card_1\" class=\"player_card card\" src=\"../User/Stimuli/Cards/back-red.png\"/>\n  <img id=\"player_10_card_2\" class=\"player_card card\" src=\"../User/Stimuli/Cards/back-red.png\"/>\n\n\n\n  <div id=\"middle_cards\">\n    <table>\n      <tr>\n        <td>\n          <img id=\"middle_1\" class=\"card\" src=\"../User/Stimuli/Cards/back-red.png\" />\n        </td>\n        <td>\n          <img id=\"middle_2\" class=\"card\" src=\"../User/Stimuli/Cards/back-red.png\" />\n        </td>\n        <td>\n          <img id=\"middle_3\" class=\"card\" src=\"../User/Stimuli/Cards/back-red.png\" />\n        </td>\n        <td>\n          <img id=\"middle_4\" class=\"card\" src=\"../User/Stimuli/Cards/back-red.png\" />\n        </td>\n        <td>\n          <img id=\"middle_5\" class=\"card\" src=\"../User/Stimuli/Cards/back-red.png\" />\n        </td>\n      </tr>\n    </table>\n  </div>\n  <button id=\"your_cards\">Deal new hand</button>\n  <div id=\"your_bet\">\n    <button class=\"btn btn-danger\" id=\"fold_btn\">Fold</button>\n    <button class=\"btn btn-danger\" id=\"check_call_btn\">Check</button>\n    <div class=\"input-group mb-3\">\n      <input type=\"text\" class=\"form-control\" aria-label=\"raise_btn\" id=\"raise_input\">\n      <div class=\"input-group-append\">\n        <button class=\"input-group-text btn-raise\" id=\"raise_btn\">Raise</button>\n      </div>\n    </div>\n  </div>\n</div>\n\n<script>\n$(\"#your_cards\").on(\"click\",function(){\n  var data = {\n    action: \"deal\",\n    collector_code: settings.collector_code\n  }\n  $.ajax({\n    type: 'POST',\n    url: \"https://script.google.com/macros/s/AKfycbzdLP0pkgsZ_iKKMER7ZyM6_jnguMa3FZXIorz2aVfjkG8v6Dc/exec\",\n    data: data,\n    crossDomain: true,\n    timeout: 120000,\n    success:function(result){\n      //as it stands, this will never happen as Collector doesn't allow posts to it.\n    }\n  })\n  .catch(function(error){\n    //read the google sheet \n    /*\n    ParseGSX.parseGSX(data.question_id,function(result){\n      show_question(result);\n    });\n    */\n  });\n});\n\n\nsettings={\n  collector_code: \"tbc\",\n  player_name: \"tbc\",\n  this_room: \"tbc\",\n  raw_deck: {},\n  player_cards:{},\n  table_cards:[],\n  missing_players_showing:true\n}\nphase = \"welcome\",\n\nphases = [\n  \"welcome\",\n  \"lobby\",\n  \"playing\"\n]\n\n/*\nto do list\n- prevent a player stealing another player's name...?\n*/\n\n/////////////\n// Actions //\n/////////////\n$(\"#join_btn\").on(\"click\",function(){\n  settings.this_room = master_sheet.filter(function(row){\n    return row.roomcode == $(\"#room_code_input\").val();\n  })[0];\n  if(typeof(settings.this_room) == \"undefined\"){\n    bootbox.alert(\"That's not a recognised room code\");\n  } else {\n    settings.collector_code = settings.this_room.collectorcode;\n    bootbox.prompt(\"What (nick)name do you want to use?\",function(player_name){\n      player_name = player_name.toUpperCase();\n      settings.player_name = player_name;\n      var data = {\n        action: \"join\",\n        collector_code: settings.collector_code,\n        player_name: player_name,\n      }\n      $.ajax({\n        type: 'POST',\n        url: \"https://script.google.com/macros/s/AKfycbzdLP0pkgsZ_iKKMER7ZyM6_jnguMa3FZXIorz2aVfjkG8v6Dc/exec\",\n        data: data,\n        crossDomain: true,\n        timeout: 120000,\n        success:function(result){\n          //as it stands, this will never happen as Collector doesn't allow posts to it.\n        }\n      })\n      .catch(function(error){\n        //read the google sheet \n        /*\n        ParseGSX.parseGSX(data.question_id,function(result){\n          show_question(result);\n        });\n        */\n      });\n    });    \n  }\n});\n$(\"#everybody_in_btn\").on(\"click\",function(){\n  var data = {\n      action: \"everybody_in\",\n      collector_code: settings.collector_code,\n    }\n    $.ajax({\n      type: 'POST',\n      url: \"https://script.google.com/macros/s/AKfycbzdLP0pkgsZ_iKKMER7ZyM6_jnguMa3FZXIorz2aVfjkG8v6Dc/exec\",\n      data: data,\n      crossDomain: true,\n      timeout: 120000,\n      success:function(result){\n        //as it stands, this will never happen as Collector doesn't allow posts to it.\n      }\n    })\n    .catch(function(error){\n      //read the google sheet \n      /*\n      ParseGSX.parseGSX(data.question_id,function(result){\n        show_question(result);\n      });\n      */\n    });\n});\n$(\"#new_room_btn\").on(\"click\",function(){\n  settings.collector_code = makeid(12);\n  bootbox.prompt(\"What (nick)name do you want to use?\",function(player_name){\n    settings.player_name = player_name.toUpperCase();\n    var data = {\n      action: \"create_room\",\n      collector_code: settings.collector_code,\n      player_name: player_name,\n    }\n    $.ajax({\n      type: 'POST',\n      url: \"https://script.google.com/macros/s/AKfycbzdLP0pkgsZ_iKKMER7ZyM6_jnguMa3FZXIorz2aVfjkG8v6Dc/exec\",\n      data: data,\n      crossDomain: true,\n      timeout: 120000,\n      success:function(result){\n        //as it stands, this will never happen as Collector doesn't allow posts to it.\n      }\n    })\n    .catch(function(error){\n      //read the google sheet \n      /*\n      ParseGSX.parseGSX(data.question_id,function(result){\n        show_question(result);\n      });\n      */\n    });\n  });\n});\n$(\"#room_code_input\").on(\"input\",function(){\n  $(this).val($(this).val().toUpperCase());\n});\n\nplayer_obj = {\n  name:\"tbc\",\n  amount:-1,\n  wipeouts:0,\n  current_round:-1\n}\n\n\n//based on solution by csharptest.net at https://stackoverflow.com/questions/1349404/generate-random-string-characters-in-javascript\nfunction makeid(length) {\n  var result           = '';\n  var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmonpqrstuvwxyz1234567890';\n  var charactersLength = characters.length;\n  for ( var i = 0; i < length; i++ ) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n}\n\n//based on code found at: https://raw.githubusercontent.com/drumwolf/parse-gsx/0ba67bf115eac96e0763777a4fb2c485a35e2daa/parse-gsx-ajax.js\nvar ParseGSX = (function() {\n  var _defaultCallback = function(data) {\n    console.log(data);\n  };\n  var _parseRawData = function(res) {\n    var finalData = [];\n    res.feed.entry.forEach(function(entry){\n      var parsedObject = {};\n      for (var key in entry) {\n        if (key.substring(0,4) === \"gsx$\") {\n          parsedObject[key.slice(4)] = entry[key][\"$t\"];\n        }\n      }\n      finalData.push(parsedObject);\n    });\n    var processGSXData = _defaultCallback;\n    processGSXData(finalData);\n  };\n  var parseGSX = function(spreadsheetID, callback) {\n    var url = \"https://spreadsheets.google.com/feeds/list/\" + spreadsheetID + \"/od6/public/values?alt=json\";\n    var ajax = $.get(url);\n    if (callback) { _defaultCallback = callback; }\n    $.when(ajax).then(_parseRawData);\n  };\n  return { parseGSX: parseGSX };\n})();\n\n$(\"#fold_btn\").on(\"click\",function(){\n  var data = {\n    action: \"fold\",\n    collector_code: settings.collector_code,\n    player_name: settings.player_name,\n  }\n  $.ajax({\n    type: 'POST',\n    url: \"https://script.google.com/macros/s/AKfycbzdLP0pkgsZ_iKKMER7ZyM6_jnguMa3FZXIorz2aVfjkG8v6Dc/exec\",\n    data: data,\n    crossDomain: true,\n    timeout: 120000,\n    success:function(result){\n      //as it stands, this will never happen as Collector doesn't allow posts to it.\n    }\n  })\n  .catch(function(error){\n    //read the google sheet \n    /*\n    ParseGSX.parseGSX(data.question_id,function(result){\n      show_question(result);\n    });\n    */\n  });\n});\n\n$(\"#check_call_btn\").on(\"click\",function(){\n  var data = {\n    action: \"check_call\",\n    collector_code: settings.collector_code,\n    player_name: settings.player_name,\n  }\n  $.ajax({\n    type: 'POST',\n    url: \"https://script.google.com/macros/s/AKfycbzdLP0pkgsZ_iKKMER7ZyM6_jnguMa3FZXIorz2aVfjkG8v6Dc/exec\",\n    data: data,\n    crossDomain: true,\n    timeout: 120000,\n    success:function(result){\n      //as it stands, this will never happen as Collector doesn't allow posts to it.\n    }\n  })\n  .catch(function(error){\n    //read the google sheet \n    /*\n    ParseGSX.parseGSX(data.question_id,function(result){\n      show_question(result);\n    });\n    */\n  });\n});\n\nfunction update_players(){\n  function update_your_cards(roomobj){\n    var your_player = roomobj.players[settings.player_name];\n    //var card_1 = ;\n    if(typeof(your_player) !== \"undefined\" &&\n       typeof(your_player.current_hand) !== \"undefined\" &&\n       typeof(your_player.current_hand[0]) !== \"undefined\"){\n      \n        if(settings.missing_players_showing){\n          $(\".player_card\").hide();\n          settings.missing_players_showing = false;\n        }\n        Object.keys(roomobj.players).forEach(function(player,player_no){\n          this_player_no = player_no + 1;\n          if(player == settings.player_name){\n            $(\"#player_\"+this_player_no+\"_card_1\").attr(\"src\",\"../User/Stimuli/Cards/\" + your_player.current_hand[0].card_file);\n            $(\"#player_\"+this_player_no+\"_card_2\").attr(\"src\",\"../User/Stimuli/Cards/\" + your_player.current_hand[1].card_file);\n            $(\"#player_\"+this_player_no+\"_card_1\").show();\n            $(\"#player_\"+this_player_no+\"_card_2\").show();\n          } else {\n            $(\"#player_\"+this_player_no+\"_card_1\").attr(\"src\",\"../User/Stimuli/Cards/back-red.png\");\n            $(\"#player_\"+this_player_no+\"_card_2\").attr(\"src\",\"../User/Stimuli/Cards/back-red.png\");\n            $(\"#player_\"+this_player_no+\"_card_1\").show();\n            $(\"#player_\"+this_player_no+\"_card_2\").show();\n          }\n          if(roomobj.players[player].current_pot > max_bid){\n            max_bid = roomobj.players[player].current_pot;\n          }\n        });\n      \n\n      \n      //if your turn, allow you to bid\n      if(your_player.current_bid == \"your turn\"){\n        $(\"#fold_btn\").attr(\"disabled\",false);\n        $(\"#check_call_btn\").attr(\"disabled\",false);\n        $(\"#raise_input\").attr(\"disabled\",false);\n        $(\"#raise_btn\").attr(\"disabled\",false);\n        \n        //detect whether checking or calling\n        var max_bid = -1;\n        Object.keys(roomobj.players).forEach(function(player,player_no){\n          if(roomobj.players[player].current_pot > max_bid){\n            max_bid = roomobj.players[player].current_pot;\n          }\n        });\n        \n        if(max_bid > your_player.current_pot){\n          $(\"#check_call_btn\").html(\"Call\");\n        } else if(max_bid == your_player.current_pot) {\n          $(\"#check_call_btn\").html(\"Check\");\n        } else {\n          bootbox.alert(\"something has gone wrong\");\n        }\n        \n        \n      } else {\n        $(\"#fold_btn\").attr(\"disabled\",true);\n        $(\"#check_call_btn\").attr(\"disabled\",true);\n        $(\"#raise_input\").attr(\"disabled\",true);\n        $(\"#raise_btn\").attr(\"disabled\",true);\n      }\n      \n      switch(roomobj.round_phase){\n        case 0:\n          $(\"#middle_1\").attr(\"src\",\"../User/Stimuli/Cards/back-red.png\");\n          $(\"#middle_2\").attr(\"src\",\"../User/Stimuli/Cards/back-red.png\");\n          $(\"#middle_3\").attr(\"src\",\"../User/Stimuli/Cards/back-red.png\");\n          $(\"#middle_4\").attr(\"src\",\"../User/Stimuli/Cards/back-red.png\");\n          $(\"#middle_5\").attr(\"src\",\"../User/Stimuli/Cards/back-red.png\");\n          break;\n        case 1:\n          $(\"#middle_1\").attr(\"src\",\"../User/Stimuli/Cards/\" + roomobj.middle_cards[0].card_file);\n          $(\"#middle_2\").attr(\"src\",\"../User/Stimuli/Cards/\" + roomobj.middle_cards[1].card_file);\n          $(\"#middle_3\").attr(\"src\",\"../User/Stimuli/Cards/\" + roomobj.middle_cards[2].card_file);\n          $(\"#middle_4\").attr(\"src\",\"../User/Stimuli/Cards/back-red.png\");\n          $(\"#middle_5\").attr(\"src\",\"../User/Stimuli/Cards/back-red.png\");\n          break;\n        case 2:\n          $(\"#middle_1\").attr(\"src\",\"../User/Stimuli/Cards/\" + roomobj.middle_cards[0].card_file);\n          $(\"#middle_2\").attr(\"src\",\"../User/Stimuli/Cards/\" + roomobj.middle_cards[1].card_file);\n          $(\"#middle_3\").attr(\"src\",\"../User/Stimuli/Cards/\" + roomobj.middle_cards[2].card_file);\n          $(\"#middle_4\").attr(\"src\",\"../User/Stimuli/Cards/\" + roomobj.middle_cards[3].card_file);\n          $(\"#middle_5\").attr(\"src\",\"../User/Stimuli/Cards/back-red.png\");\n          break\n        case 3:\n          $(\"#middle_1\").attr(\"src\",\"../User/Stimuli/Cards/\" + roomobj.middle_cards[0].card_file);\n          $(\"#middle_2\").attr(\"src\",\"../User/Stimuli/Cards/\" + roomobj.middle_cards[1].card_file);\n          $(\"#middle_3\").attr(\"src\",\"../User/Stimuli/Cards/\" + roomobj.middle_cards[2].card_file);\n          $(\"#middle_4\").attr(\"src\",\"../User/Stimuli/Cards/\" + roomobj.middle_cards[3].card_file);\n          $(\"#middle_5\").attr(\"src\",\"../User/Stimuli/Cards/\" + roomobj.middle_cards[4].card_file);\n          break;\n      }\n      \n      \n    }\n  }\n  var roomobj = JSON.parse(settings.this_room.roomobj);\n  for(var i = 0; i< 10; i++){\n    var this_player = Object.keys(roomobj.players).filter(function(player){\n      return roomobj.players[player].player_no == i\n    })[0];\n    if(typeof(this_player) == \"undefined\"){\n      $(\"#player_\" + i).hide();\n    } else {\n      var player_html = \"<h6>\" + this_player + \"</h6>\" +\n                        \"<h6>Chips: \" + roomobj.players[this_player].chips + \"</h6>\" +\n                        \"<h6>Bet: \"   + roomobj.players[this_player].current_pot + \"</h6>\" +\n                        \"<h6>Status: \"   + roomobj.players[this_player].current_bid + \"</h6>\";\n      $(\"#player_\" + i).html(player_html);\n      if(this_player == settings.player_name){\n        $(\"#player_\" + i).removeClass(\"text-primary\");\n        $(\"#player_\" + i).addClass(\"text-danger\");\n      }\n      update_your_cards(roomobj);\n      \n    }\n  }\n}\n\nvar master_sheet;\nfunction sheet_check(){\n  ParseGSX.parseGSX(\"1lp9SwAtHytTGCJFfTkA9VUDz1mEk3Oez2xlDFapPt8g\",function(quest_array){\n    master_sheet = quest_array;\n    settings.this_room = master_sheet.filter(function(row){\n      return row.collectorcode == settings.collector_code;\n    })[0];\n    switch(phase){\n      case \"welcome\":\n        \n        \n        if(typeof(settings.this_room) !== \"undefined\"){\n          phase = \"lobby\";\n          $(\"#welcome_screen\").hide();\n          $(\"#lobby\").fadeIn(1000);\n        }\n        //if(master_sheet)\n        setTimeout(function(){\n          sheet_check();\n        },1000);\n        break;\n      case \"lobby\":\n        var lobby_people_html = \"\";\n        \n        for(var i = 0; i < 10; i++){\n          if(settings.this_room[\"player\"+i] !== \"\"){\n            lobby_people_html += \"<h2 class='text-primary'>\" + settings.this_room[\"player\"+i] + \"</h2>\";\n          }\n        }\n        $(\"#lobby_people\").html(lobby_people_html);\n        $(\"#room_code_span\").html(settings.this_room.roomcode);\n\n        if(settings.this_room.everybodyin == \"TRUE\"){\n          phase = \"playing\";\n          $(\"#lobby\").hide();\n          $(\"#game\").fadeIn(1000);\n          update_players();\n        }\n        setTimeout(function(){\n          sheet_check();\n        },1000);\n        break;\n      case \"playing\":\n        update_players(); \n        setTimeout(function(){\n          sheet_check();\n        },1000);\n        break;\n    }\n  });\n}\nsheet_check();\n\n/* google scripts code:\n\nfunction doGet(e){\n  return initiate(e);\n}\n\nfunction doPost(e){\n  return initiate(e);\n}\n\nfunction initiate(e) {\n  \n  var response = e.parameter;\n  var action = response.action;\n  switch(action){\n    case \"check_call\":\n      check_call(response.collector_code,\n                  response.player_name);\n      break;\n    case \"create_room\":\n      create_room(response.collector_code,\n                  response.player_name);\n      break;\n    case \"everybody_in\":\n      everybody_in(response.collector_code);\n      break;\n    case \"fold\":\n      fold(response.collector_code,\n           response.player_name);\n    case \"join\":\n      join_room(response.collector_code,\n                response.player_name);\n      break;\n  }\n}\n\nfunction pilot_check_call(){\n  check_call(\"KRj75JmD4grZ\",\"ANT\");\n}\n\nfunction check_call(collector_code,\n                    player_name){\n  \n  player_name = player_name.toUpperCase();\n  \n  var master_sheet = SpreadsheetApp.openById(\"1lp9SwAtHytTGCJFfTkA9VUDz1mEk3Oez2xlDFapPt8g\");\n  master_sheet = master_sheet.getSheetByName('Sheet1');\n  var game_row = rowOfValue(master_sheet,   //looking within this\n                            collector_code, //looking for this\n                            0);             //looking in this column\n  var roomobj = JSON.parse(master_sheet.getRange(game_row,3).getValues()[0]);\n  \n  \n  var max_bid = -1;\n  Object.keys(roomobj.players).forEach(function(player){\n    if(roomobj.players[player].current_pot > max_bid){\n      max_bid = roomobj.players[player].current_pot;\n    }\n  });\n  \n  roomobj.players[player_name].current_pot = max_bid;\n  roomobj.players[player_name].last_bet  = max_bid;\n  \n  var not_folded = 0;\n  var current_bets = [];\n  Object.keys(roomobj.players).forEach(function(player){\n    if(roomobj.players[player].current_bid !== \"fold\"){\n      not_folded++;\n      current_bets.push(roomobj.players[player].last_bet);\n    }\n  });\n  master_sheet.getRange(1,18).setValue(\"hi - \" + JSON.stringify(current_bets));\n  if(current_bets.every( (val, i, arr) => val === arr[0] )){ //i.e. there are at least 2 people with equal bets so move onto the next round\n    //master_sheet.getRange(1,18).setValue(\"hi - \" + JSON.stringify(current_bets));\n    roomobj.round_phase++;\n    if(roomobj.round_phase > 3){\n      roomobj = resolve_bets(roomobj);\n    } else {\n      roomobj = round_progress(roomobj);\n    }\n    \n  } else {\n    roomobj = next_player(roomobj);  \n  }\n  \n  \n  master_sheet.getRange(game_row,3).setValue(JSON.stringify(roomobj));\n  \n} \n\nfunction resolve_bets(roomobj){\n  var best_hand = \"tbc\";\n  var best_rank = \"tbc\";\n  Object.keys(roomobj.players).forEach(function(player){\n    //only consider if they haven't folder\n    if(roomobj.players[player].current_bid !== \"fold\"){\n      //detect what the hand is first\n      var all_cards = roomobj.players[player].current_hand.concat(roomobj.middle_cards);\n      [hand_description,player_best_hand] = evaluate_hand(all_cards);\n    }\n    \n  });\n\n  \n  return roomobj;\n}\n\nfunction evaluate_hand(all_cards){\n  //count occurrences of each suit\n  var hand_summary = {\n    flush:false,\n    four_of_a_kind: false,\n    pair:false,\n    full_house: false,\n    three_of_a_kind: false,\n    two_pairs: false,\n    straight:false,\n    straight_flush:false,\n    ordered_cards:[],\n    possible_straights:[],\n    suit_count:{\n      club:0,\n      diamond:0,\n      heart:0,\n      spade:0\n    }\n  }\n  all_cards.forEach(function(card){\n    //ordering for straight calculations later\n    hand_summary.ordered_cards.push(card.card_no);\n    hand_summary.ordered_cards = hand_summary.ordered_cards.sort((a, b) => a - b);\n    \n    //flush calculations\n    hand_summary.suit_count[card.suit]++;\n    if(hand_summary.suit_count[card.suit] > 4){\n      //hand_summary.flush = true;\n      hand_summary.flush = all_cards.filter(function(flush_card){\n        return flush_card.suit == card.suit;\n      });\n    }\n  });\n  \n  hand_summary.flush = hand_summary.flush.sort((a, b) => a - b); \n  while(hand_summary.flush.length > 5){      //trim to remove the next bottom\n    hand_summary.splice(5,1);\n  }\n  \n  //check straight\n  var in_a_row    = [];\n  var last_number = -1;\n  var sequences   = [[]];\n  hand_summary.ordered_cards.forEach(function(this_no){\n    if(this_no == last_number + 1){\n      in_a_row[in_a_row.length-1]++;\n      sequences[in_a_row.length-1].push(this_no);\n      if(in_a_row[in_a_row.length-1] > 4){\n        hand_summary.straight = sequences[in_a_row.length-1];\n      }\n    } else if(this_no !== last_number){\n      in_a_row.push(1);\n      sequences.push([])\n    }\n    last_number = this_no;\n  });\n  while(hand_summary.straight.length > 5){\n    hand_summary.splice(0,1);\n  }\n\n  // straight flush\n  if(hand_summary.straight){\n    //now just need to detect if it's a straight flush - filter by suit..?\n    [\"club\",\"diamond\",\"heart\",\"spade\"].forEach(function(suit){\n      var suit_cards = all_cards.filter(function(card){\n        return card.suit == suit;\n      });\n      //order the cards\n      in_a_row = [];\n      last_number = -1;\n      sequences   = [[]];\n  \n      hand_summary.ordered_cards.forEach(function(this_no){\n        if(this_no == last_number + 1){\n          in_a_row[in_a_row.length-1]++;\n          sequences[in_a_row.length-1].push(this_no);\n          if(in_a_row[in_a_row.length-1] > 4){\n            hand_summary.straight_flush = sequences[in_a_row.length-1];\n          }\n        } else if(this_no !== last_number){\n          in_a_row.push(1);\n        }\n        last_number = this_no;\n      });\n    });\n  }\n  while(hand_summary.straight_flush.length > 5){\n    hand_summary.splice(0,1);\n  }\n\n  \n  //count how the hand is distributed\n  var same_numbers = {};\n  hand_summary.ordered_cards.forEach(function(card_no){\n    if(typeof(same_numbers[card_no]) == \"undefined\"){\n      same_numbers[card_no] = 1;\n    } else {\n      same_numbers[card_no]++;\n    }\n  });\n  \n   \n  hand_summary.full_house = {\n    three: -1,  \n    two:   -1\n  }; \n  hand_summary.two_pair   = {\n    pair_1:-1,\n    pair_2:-1,\n    high:-1\n  }\n  hand_summary.three_kind = {\n    three: -1,\n    high_1:-1,\n    high_2:-1\n  };\n  hand_summary.four_kind = {\n    four: -1,\n    high: -1\n  }\n  hand_summary.one_pair = {\n    pair: -1,\n    high_1:-1,\n    high_2:-1,\n    high_3:-1\n  }\n\n  Object.keys(same_numbers).forEach(function(same_number){\n    switch(same_numbers[same_number]){\n      case 4:\n        hand_summary.four_kind.four = same_number;\n        break;  \n      case 3:\n        hand_summary.three_kind.three = same_number;\n        break;\n      case 2:\n        //full house\n        if(same_number > hand_summary.full_house.two){\n          hand_summary.full_house.two = same_number;\n        }\n        //two pair\n        if(same_number > hand_summary.two_pair.pair_1){\n          hand_summary.two_pair.pair_2 = hand_summary.two_pair.pair_1;\n          hand_summary.two_pair.pair_1 = same_number;\n        } else if(same_number > hand_summary.two_pair.pair_2){\n          hand_summary.two_pair.pair_2 = same_number;\n        }\n        //pair\n        if(same_number > hand_summary.one_pair.pair){\n          hand_summary.one_pair.pair = same_number\n        }\n        \n        break;\n      case 1:\n        //four_kind\n        if(same_number > hand_summary.four_kind.high){\n          hand_summary.four_kind.high = same_number;\n        }\n        //three_kind\n        if(same_number > hand_summary.three_kind.high_2){\n          hand_summary.three_kind.high_2 = hand_summary.three_kind.high_1;\n          hand_summary.three_kind.high_1 = same_number;\n        } else if(same_number > hand_summary.three_kind.high_2){\n          hand_summary.three_kind.high_2 = same_number;\n        }\n        \n        //two_pair\n        if(same_number > hand_summary.two_pair.high){\n          hand_summary.two_pair.high = same_number;\n        }\n        //one_pair\n        if(same_number > hand_summary.one_pair.high_1){\n          hand_summary.one_pair.high_3 = hand_summary.one_pair.high_2;\n          hand_summary.one_pair.high_2 = hand_summary.one_pair.high_1;\n          hand_summary.one_pair.high_1 = same_number;\n        } else if(same_number > hand_summary.one_pair.high_2){\n          hand_summary.one_pair.high_3 = hand_summary.one_pair.high_2;\n          hand_summary.one_pair.high_2 = same_number;\n        } else if(same_number > hand_summary.one_pair.high_3){\n          hand_summary.one_pair.high_3 = same_number;\n        }\n        break;\n    }\n  });\n  \n  \n  \n  \n  var hand_strength = 0;\n  var hand_description = \"\";\n  if(hand_summary.straight_flush !== false){\n    hand_strength = \"straight flush\";\n    hand_description = hand_summary.straight_flush;\n  } else if(hand_summary.four_kind.four !== -1){\n    hand_strength = \"four of a kind\";\n    hand_description = hand_summary.four_kind;\n  } else if(hand_summary.full_house.three !== -1 &&\n            hand_summary.full_house.two   !== -1){\n    hand_strength = \"full house\";\n    hand_description = hand_summary.full_house;\n  } else if(hand_summary.flush !== false){\n    hand_strength = \"flush\";\n    hand_description = hand_summary.flush;\n  } else if(hand_summary.straight !== false){\n    hand_strength = \"straight\";\n    hand_description = hand_summary.straight;\n  } else if(hand_summary.three_kind.three !== -1){\n    hand_strength = \"three of a kind\";\n    hand_description = hand_summary.three_kind;\n  } else if(hand_summary.two_pair.pair_1 !== -1 &&\n            hand_summary.two_pair.pair_2 !== -1){\n    hand_strength = \"two pairs\";\n    hand_description = hand_summary.two_pair;\n  } else if(hand_summary.one_pair.pair !== -1){\n    hand_strength = \"one pair\";\n    hand_description = hand_summary.one_pair;\n  } else {\n    hand_strength = \"high card\";\n    hand_description = hand_summary.ordered_cards;\n    while(hand_description.length >5){\n      hand_description.splice(0,1);\n    }\n  }\n  \n  return [hand_strength,hand_description]\n  \n\n  var hands = {\n    \"high_card\":{\n      rank:0\n    },\n    \"pair\":{\n      rank:1\n    },\n    \"2_pair\":{\n      rank:2\n    },\n    \"3_kind\":{\n      rank:3\n    },\n    \"straight\":{\n      rank:4\n    },\n    \"flush\":{\n      rank:5\n    },\n    \"full_house\":{\n      rank:6\n    },\n    \"4_kind\":{\n      rank:7\n    },\n    \"straight_flush\":{\n      rank:8\n    }\n  }  \n}\n\nfunction round_progress(roomobj){\n  Object.keys(roomobj.players).forEach(function(this_player){\n    roomobj.players[this_player].last_bet = -1;    \n  });\n  \n  \n  \n  return(roomobj);                                  \n}\n\nfunction pilot_fold(){\n  fold(\"KRj75JmD4grZ\",\"ANT\");\n}\n\nfunction fold(collector_code,\n              player_name){\n  player_name = player_name.toUpperCase();\n  \n  var master_sheet = SpreadsheetApp.openById(\"1lp9SwAtHytTGCJFfTkA9VUDz1mEk3Oez2xlDFapPt8g\");\n  master_sheet = master_sheet.getSheetByName('Sheet1');\n  var game_row = rowOfValue(master_sheet,   //looking within this\n                            collector_code, //looking for this\n                            0);             //looking in this column\n  var roomobj = JSON.parse(master_sheet.getRange(game_row,3).getValues()[0]);\n  \n  roomobj.players[player_name].current_bid = \"fold\";\n\n  \n  //move onto the next player\n  //check if 2+ haven't yet folded and if there's a consistent bet\n  var not_folded = 0;\n  var current_bets = [];\n  Object.keys(roomobj.players).forEach(function(player){\n    if(roomobj.players[player].current_bid !== \"fold\"){\n      not_folded++;\n      current_bets.push(roomobj.players[player].last_bet);\n    }\n  });\n  master_sheet.getRange(1,17).setValue(\"not folded = \" + not_folded);\n   \n  var round_over = false;\n  if(not_folded > 1){\n    if(current_bets.every( (val, i, arr) => val === arr[0] )){ //i.e. there are at least 2 people with equal bets so move onto the next round\n      master_sheet.getRange(1,18).setValue(JSON.stringify(current_bets));\n                                                               \n      \n      \n    } else {                                                   //next player this round\n      roomobj = next_player(roomobj);\n      master_sheet.getRange(1,18).setValue(\"howdy\");\n      \n    }\n  } else {                                                     //settle up\n    var winners_chips = count_chips(roomobj);\n    Object.keys(roomobj.players).forEach(function(player){\n      if(roomobj.players[player].current_bid !== \"fold\"){\n        roomobj.players[player].chips += winners_chips;\n      }\n    });\n    round_over = true;\n  }\n  \n\n  master_sheet.getRange(game_row,3).setValue(JSON.stringify(roomobj));\n  if(round_over){\n    deal_cards(fill_deck(),game_row);\n  }\n}\n\nfunction next_player(roomobj){\n  var valid_player = false;\n  for(var i = 1; i < Object.keys(roomobj).length; i++){\n    if(valid_player == false){\n      roomobj.current_bidder++;\n      roomobj.current_bidder = roomobj.current_bidder % Object.keys(roomobj.players).length;\n      var current_player = Object.keys(roomobj.players).filter(function(player){\n        return roomobj.players[player].player_no == roomobj.current_bidder;\n      })[0];\n      \n\n      if(roomobj.players[current_player].current_bid == \"fold\"){\n        var master_sheet = SpreadsheetApp.openById(\"1lp9SwAtHytTGCJFfTkA9VUDz1mEk3Oez2xlDFapPt8g\");\n        master_sheet = master_sheet.getSheetByName('Sheet1');\n        \n        master_sheet.getRange(3,18).setValue(\"not here\");\n      } else {\n        valid_player = true;\n        var master_sheet = SpreadsheetApp.openById(\"1lp9SwAtHytTGCJFfTkA9VUDz1mEk3Oez2xlDFapPt8g\");\n        master_sheet = master_sheet.getSheetByName('Sheet1');\n        \n        master_sheet.getRange(2,18).setValue(\"got here\");\n        Object.keys(roomobj.players).forEach(function(this_player){\n          if(this_player == current_player){\n            roomobj.players[this_player].current_bid = \"your turn\";\n          } else {\n            if(roomobj.players[this_player].current_bid !== \"fold\"){\n              roomobj.players[this_player].current_bid = \"waiting\"\n            }\n          }\n        });\n        \n      }\n    }\n  }\n  return roomobj;\n}\n\nfunction count_chips(roomobj){\n  chips_total = 0;\n  Object.keys(roomobj.players).forEach(function(player){\n    chips_total += roomobj.players[player].current_pot;\n  });\n  return chips_total;\n}\n\nfunction pilot_create_room(){\n  create_room(\"brapbrap\",\"tdawg\");\n}\n\nfunction create_room(collector_code,\n                     player_name){\n  var master_sheet = SpreadsheetApp.openById(\"1lp9SwAtHytTGCJFfTkA9VUDz1mEk3Oez2xlDFapPt8g\");\n  master_sheet = master_sheet.getSheetByName('Sheet1');\n  //detect if the collector_code exists\n  var game_row = rowOfValue(master_sheet,   //looking within this\n                            collector_code, //looking for this\n                            0);             //looking in this column\n  if(game_row == undefined){\n    game_row = master_sheet.getLastRow()+1;\n    var room_code = makeid(4);\n    master_sheet.getRange(game_row, 1).setValue(collector_code);\n    master_sheet.getRange(game_row, 2).setValue(room_code);\n    master_sheet.getRange(game_row, 5).setValue(player_name);\n    \n  } else {\n    //master_sheet.getRange(2, 2).setValue(\"failed\");\n    // this should never ever happen (or at least is very very unlikely)\n  }\n}\nfunction pilot_everybody_in(collector_code){\n  everybody_in(\"KRj75JmD4grZ\");\n}\n\nfunction everybody_in(collector_code){\n  var master_sheet = SpreadsheetApp.openById(\"1lp9SwAtHytTGCJFfTkA9VUDz1mEk3Oez2xlDFapPt8g\");\n  master_sheet = master_sheet.getSheetByName('Sheet1');\n  //detect if the collector_code exists\n  var game_row = rowOfValue(master_sheet,   //looking within this\n                            collector_code, //looking for this\n                            0);             //looking in this column\n  \n  // create the room_obj\n  players = {};\n  for(var i = 5; i < 16; i++){\n    var this_player = master_sheet.getRange(game_row,i).getValues()[0];\n    if(this_player !== \"\"){\n      players[this_player] = {\n        player_no:i-5,\n        chips:1000,\n        current_hand:[],\n        current_bid:\"waiting\"\n      }      \n    }\n  }\n  \n  // somehow a blank player seems to come through\n  if(typeof(players[\"\"]) !== \"undefined\"){\n    delete(players[\"\"]);\n  }\n  \n  roomobj = {\n    small_blind:1,\n    small_blind_player:0,\n    players : players\n  }\n  master_sheet.getRange(game_row,15).setValue(true);\n  \n  master_sheet.getRange(game_row,3).setValue(JSON.stringify(roomobj));\n  //deal the first hand\n  \n  deal_cards(fill_deck(),game_row);\n  \n  \n}\n\nfunction pilot_deal_cards(){\n  deal_cards(fill_deck(),3)\n}\n\nfunction update_pot(){\n  var master_sheet = SpreadsheetApp.openById(\"1lp9SwAtHytTGCJFfTkA9VUDz1mEk3Oez2xlDFapPt8g\");\n  master_sheet = master_sheet.getSheetByName('Sheet1');\n  //var roomobj = JSON.parse(master_sheet.getRange(game_row,3).getValues()[0]);\n  \n  \n}\n\nfunction deal_cards(this_deck,game_row){\n  var master_sheet = SpreadsheetApp.openById(\"1lp9SwAtHytTGCJFfTkA9VUDz1mEk3Oez2xlDFapPt8g\");\n  master_sheet = master_sheet.getSheetByName('Sheet1');\n  \n  var roomobj = JSON.parse(master_sheet.getRange(game_row,3).getValues()[0]);\n  \n  var players = Object.keys(roomobj.players);\n  roomobj.small_blind_player++;\n  \n  roomobj.small_blind_player = roomobj.small_blind_player % players.length;\n  roomobj.large_blind_player = (roomobj.small_blind_player + 1) % players.length;\n  roomobj.first_bidder       = (roomobj.small_blind_player + 2) % players.length;\n  roomobj.current_bidder     = roomobj.first_bidder;\n  \n  if(roomobj.small_blind_player > players.length - 1){\n    roomobj.small_blind_player = 1;\n  }\n  players.forEach(function(player,player_no){\n    // set the blinds\n    //calculate modulus\n    \n    roomobj.players[player].last_bet = -1;\n    \n    if(player_no == roomobj.small_blind_player){\n      roomobj.players[player].current_bid = \"small blind\";\n      roomobj.players[player].chips = roomobj.players[player].chips - roomobj.small_blind;\n      roomobj.players[player].current_pot = roomobj.small_blind;\n    } else if(player_no == roomobj.large_blind_player){\n      roomobj.players[player].current_bid = \"large blind\";\n      roomobj.players[player].chips = roomobj.players[player].chips - roomobj.small_blind * 2;\n      roomobj.players[player].current_pot = roomobj.small_blind * 2;\n    } else {\n      roomobj.players[player].current_bid = \"waiting\";\n      roomobj.players[player].current_pot = 0;\n    }\n    if(player_no == roomobj.first_bidder){\n      roomobj.turn = player;\n      roomobj.players[player].current_bid = \"your turn\";\n    }\n    update_pot();\n    \n    // deal the cards\n    var first_card = this_deck.pop();\n    var second_card = this_deck.pop();\n    roomobj.players[player].current_hand = [first_card,\n                                            second_card];\n  });\n  roomobj.middle_cards = [];\n  \n  for(var i=0; i<5; i++){\n    roomobj.middle_cards.push(this_deck.pop());\n  }\n  roomobj.round_phase = 0; //opening\n  roomobj.this_deck = this_deck;\n  \n  master_sheet.getRange(game_row,3).setValue(JSON.stringify(roomobj));\n}\nfunction fill_deck(){\n  this_deck = [];\n  var suits = [\"club\",\"diamond\",\"heart\",\"spade\"];\n  for(var card_no = 2; card_no < 15; card_no++){\n    var card_look = card_no;\n    if(card_no > 10){\n      switch(card_no){\n        case 11:\n          card_look = \"jack\";\n          break;\n        case 12:\n          card_look = \"queen\";\n          break;\n        case 13:\n          card_look = \"king\";\n          break;\n        case 14:\n          card_look = \"1\";\n          break;\n      }\n    }\n    suits.forEach(function(suit){\n      this_deck.push({\n        card_file: suit + \"_\" + card_look + \".png\",\n        card_no:   card_no,\n        suit:      suit\n      });\n    });\n  }\n  shuffled_deck = shuffle(this_deck);\n  return shuffled_deck;\n}\nfunction join_room(collector_code,\n                   player_name){\n  player_name = player_name.toUpperCase();\n  var master_sheet = SpreadsheetApp.openById(\"1lp9SwAtHytTGCJFfTkA9VUDz1mEk3Oez2xlDFapPt8g\");\n  master_sheet = master_sheet.getSheetByName('Sheet1');\n  //detect if the collector_code exists\n  var game_row = rowOfValue(master_sheet,   //looking within this\n                            collector_code, //looking for this\n                            0);             //looking in this column\n  \n  if(game_row == undefined){\n    \n  } else {\n    //work out the participant number\n    keep_searching = true;\n    for(var i = 5; i < 15; i++){\n      if(master_sheet.getRange(game_row,i).getValues()[0] == \"\"){\n        if(keep_searching){\n          master_sheet.getRange(game_row,i).setValue(player_name);\n          keep_searching = false;\n        }\n      } else if(master_sheet.getRange(game_row,i).getValues()[0] == player_name){\n        keep_searching = false;\n      }\n    }\n    \n    //complete_col = master_sheet.getDataRange().getValues()[0].length + 1;\n    \n    //master_sheet.getRange(2, 2).setValue(\"failed\");\n    // this should never ever happen (or at least is very very unlikely)\n  }\n}\n\n//based on solution by csharptest.net at https://stackoverflow.com/questions/1349404/generate-random-string-characters-in-javascript\nfunction makeid(length) {\n  var result           = '';\n  var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890';\n  var charactersLength = characters.length;\n  for ( var i = 0; i < length; i++ ) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n}\n\n//based on St\u00e9phane's solution at https://stackoverflow.com/questions/32565859/find-cell-matching-value-and-return-rownumber/32567126\nfunction rowOfValue(this_sheet,cell_value,column_index){  \n  var data = this_sheet.getDataRange().getValues();  \n  for(var i = 0; i<data.length;i++){\n    if(data[i][column_index] == cell_value){\n      return i+1;\n    }\n  }\n}\n\n// solution found at https://stackoverflow.com/questions/2450954/how-to-randomize-shuffle-a-javascript-array\nfunction shuffle(array) {\n  var currentIndex = array.length, temporaryValue, randomIndex;\n\n  // While there remain elements to shuffle...\n  while (0 !== currentIndex) {\n\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n\n    // And swap it with the current element.\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n\n  return array;\n}\n*/\n</script>"}, "python_procs": {"procedure_1.csv": "Item,Trial Type,Max Time,Text,Shuffle 1,\r\n2,poker,user,This is the start of a new experiment.,off,\r\n,,,,,"}, "python_conditions": "Name,Notes,Stimuli,Procedure,fullscreen,welcome,participant_id,end_message,start_message,buffer,\r\ncondition_1,You can put more detailed notes in this field,stimuli_1.csv,procedure_1.csv,off,,random,,,5,\r\n,,,,,,,,,,", "python_stims": {"stimuli_1.csv": "Cue,Answer,\r\nA,Apple,\r\nB,Banana,\r\n,,"}, "conditions": [{"name": "condition_1", "notes": "You can put more detailed notes in this field", "stimuli": "stimuli_1.csv", "procedure": "procedure_1.csv", "fullscreen": "off", "welcome": "", "participant_id": "random", "end_message": "", "start_message": "", "buffer": "5", "": ""}]}